using System.Runtime.CompilerServices;

[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Aggregate))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Bitwise))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ClientFlags))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ClientInfo))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ClientType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ClusterConfiguration))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ClusterNode))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.CommandFlags))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.CommandMap))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.CommandStatus))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.CommandTrace))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Condition))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConditionResult))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConfigurationOptions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConnectionCounters))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConnectionFailedEventArgs))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConnectionFailureType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConnectionMultiplexer))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ConnectionType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.EndPointCollection))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.EndPointEventArgs))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Exclude))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ExponentialRetry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ExportOptions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ExtensionMethods))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.GeoEntry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.GeoPosition))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.GeoRadiusOptions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.GeoRadiusResult))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.GeoUnit))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.HashEntry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.HashSlotMovedEventArgs))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IBatch))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IConnectionMultiplexer))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IDatabase))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IDatabaseAsync))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Profiling.IProfiledCommand))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IReconnectRetryPolicy))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IRedis))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IRedisAsync))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IScanningCursor))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.IServer))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ISubscriber))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ITransaction))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.InternalErrorEventArgs))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.KeyspaceIsolation.DatabaseExtensions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.LinearRetry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.LoadedLuaScript))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.LuaScript))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.MigrateOptions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Order))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Profiling.ProfiledCommandEnumerable))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Profiling.ProfilingSession))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.Proxy))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisChannel))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisCommandException))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisConnectionException))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisErrorEventArgs))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisException))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisFeatures))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisKey))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisResult))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisServerException))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisTimeoutException))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisValue))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RedisValueWithExpiry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ReplicationChangeOptions))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.RetransmissionReasonType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SaveType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ServerCounters))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ServerType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SetOperation))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.ShutdownMode))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SlotRange))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SocketManager))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SortType))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.SortedSetEntry))]
[assembly: TypeForwardedTo(typeof(global::StackExchange.Redis.When))]
